--- scripts/indexGenesUsingExtremityThatStartsTranscription.py	(original)
+++ scripts/indexGenesUsingExtremityThatStartsTranscription.py	(refactored)
@@ -22,16 +22,16 @@
         flb = myFile.firstLineBuffer(myFile.openFile(fileName, 'r'))
         c = flb.firstLine.split("\t")
         if len(c) == 6:
-            print >> sys.stderr, "(c, beg, end, s, gName, transcriptName) -> (c, s, gName)"
+            print("(c, beg, end, s, gName, transcriptName) -> (c, s, gName)", file=sys.stderr)
             # c, beg, end, s,  gName, transcriptName
             reader = myFile.myTSV.readTabular(fileName, [str, str, str, str, str, str])
             reader = ((c, intOrNone(beg), intOrNone(end), intOrNone(strand), gName) for (c, beg, end, strand, gName, tName) in reader)
         elif len(c) == 5:
-            print >> sys.stderr, "(c, beg, end, s, gName) -> (c, s, gName)"
+            print("(c, beg, end, s, gName) -> (c, s, gName)", file=sys.stderr)
             # c, beg, end, s,  gName
             tmpReader = myFile.myTSV.readTabular(fileName, [str, str, str, str, str])
             # check, with the first line, if there are several gene names (the format genome of Matthieu contains several gene names)
-            (c, beg, end, strand, gNames) = tmpReader.next()
+            (c, beg, end, strand, gNames) = next(tmpReader)
             severalNames = True if len(gNames.split(' ')) > 0 else False
             reader = itertools.chain([(c, beg, end, strand, gNames)], tmpReader)
             if severalNames:
@@ -89,37 +89,37 @@
     genomeListByChr[chr].append((beg, end, s, gNames))
     iniGenomeLength += 1
 if cptNbEditedGenes > 0:
-    print >> sys.stderr, '%s genes have been edited because gene strand was not coherent with gene.beg and gene.end columns' % cptNbEditedGenes
+    print('%s genes have been edited because gene strand was not coherent with gene.beg and gene.end columns' % cptNbEditedGenes, file=sys.stderr)
 if unofficialChromRemoved:
-    print >> sys.stderr, 'At least one unofficial chromosome (int(chr) > 100 or discarded name in myLightGenome.contigType()) has been removed'
+    print('At least one unofficial chromosome (int(chr) > 100 or discarded name in myLightGenome.contigType()) has been removed', file=sys.stderr)
 
 rankOfChrHasChanged = False
 if arguments['orderChromosomesBy'] == 'decreasingNbOfGenes':
-    if not myTools.isSorted(genomeListByChr.items(), key=lambda x: len(x[1]), stricly=False, increasingOrder=False):
-        genomeListByChr = collections.OrderedDict(sorted(genomeListByChr.items(), key=lambda x: len(x[1]), reverse=True))
+    if not myTools.isSorted(list(genomeListByChr.items()), key=lambda x: len(x[1]), stricly=False, increasingOrder=False):
+        genomeListByChr = collections.OrderedDict(sorted(list(genomeListByChr.items()), key=lambda x: len(x[1]), reverse=True))
         rankOfChrHasChanged = True
 elif arguments['orderChromosomesBy'] == 'names':
-    if not myTools.isSorted(genomeListByChr.items(), key=lambda x: myTools.keyNaturalSort(x[0])):
-        genomeListByChr = collections.OrderedDict(sorted(genomeListByChr.items(), key=lambda x: myTools.keyNaturalSort(x[0]), reverse=True))
+    if not myTools.isSorted(list(genomeListByChr.items()), key=lambda x: myTools.keyNaturalSort(x[0])):
+        genomeListByChr = collections.OrderedDict(sorted(list(genomeListByChr.items()), key=lambda x: myTools.keyNaturalSort(x[0]), reverse=True))
         rankOfChrHasChanged = True
 if rankOfChrHasChanged:
-    print >> sys.stderr, 'The rank of at least one chromosome has changed while sorting chrNames using the length of chromosomes'
+    print('The rank of at least one chromosome has changed while sorting chrNames using the length of chromosomes', file=sys.stderr)
 
 # 2) If necessary rank genes by increasing beg coordinates
 geneRankHasChanged = False
-for chr, chrom in  genomeListByChr.iteritems():
+for chr, chrom in  genomeListByChr.items():
     if not myTools.isSorted(chrom, key=lambda x: x[0], stricly=False, increasingOrder=True):
         chrom.sort(key=lambda x: x[0])
         geneRankHasChanged = True
 if geneRankHasChanged:
-    print >> sys.stderr, 'The rank of at least one gene has changed while sorting using the 5\' extremities'
-assert sum(len(chrom) for chrom in genomeListByChr.values()) == iniGenomeLength
+    print('The rank of at least one gene has changed while sorting using the 5\' extremities', file=sys.stderr)
+assert sum(len(chrom) for chrom in list(genomeListByChr.values())) == iniGenomeLength
 
 # 3) Print the genome
 f = myFile.openFile(arguments['out:genome'], 'w')
-for chr, chrom in genomeListByChr.iteritems():
+for chr, chrom in genomeListByChr.items():
     for (beg, end, s, gNames) in chrom:
-        print >> f, myFile.myTSV.printLine([chr, beg, end, s, gNames])
+        print(myFile.myTSV.printLine([chr, beg, end, s, gNames]), file=f)
 f.close()
 
 
